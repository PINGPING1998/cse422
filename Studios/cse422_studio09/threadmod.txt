
/*
* threadmodatom.c - studio 9 module with atomic variable
*/
#include <linux/init.h>
#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/ktime.h>
#include <linux/kthread.h>
#include <linux/sched.h>
#include <linux/smp.h>

/* Module Parameters */
#define iters 1000000
#define CPUS 4

/*static thread variables*/
struct task_struct * cpus[4];

/*variables*/
int j;

/*volatile*/
volatile int shared_data = 0;

/*atomic*/
atomic_t shared_data_atomic;

/*thread_start - run one or more kernel threads when they are spawned
                by the module.
  inputs: void *
  returns: integer indicating success/failure value
*/
static int thread_start(void * unused){
    int i;
    printk("Before loop!\n");
    for(i=0; i < iters; i++){
        atomic_add(1, &shared_data_atomic);
    }
    printk("After loop!\n");
    while(!kthread_should_stop()){
        schedule();
    }

    return 0;
}
/*
* thread_init - the init function, called when the module is loaded.
*/
                                                                                                                                           48,2          Top
